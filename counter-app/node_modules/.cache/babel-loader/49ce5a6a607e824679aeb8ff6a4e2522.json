{"ast":null,"code":"var _jsxFileName = \"/Users/philliphrinko/CodingStuff/counter-app/src/components/counter.jsx\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass Counter extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      value: this.props.value //tags: []\n      //imageUrl: 'https://picsum.photos/200'\n\n    };\n\n    this.handleIncrement = () => {\n      this.setState({\n        value: this.state.value + 1\n      }); //setState tells the DOM something is going to change like TF\n\n      console.log(\"Increment Clicked\", this);\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: this.getBadgeClasses(),\n        children: this.formatCount()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleIncrement,\n        className: \"btn btn-secondary btn-sm\",\n        children: \"Increment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: this.state.tags.map(tag => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: tag\n        }, tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 50\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n  getBadgeClasses() {\n    let classes = \"badge m-2 badge-\";\n    classes += this.state.count === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const {\n      count\n    } = this.state;\n    return count === 0 ? \"Zero\" : count;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"names":["React","Component","Counter","state","value","props","handleIncrement","setState","console","log","render","getBadgeClasses","formatCount","tags","map","tag","classes","count"],"sources":["/Users/philliphrinko/CodingStuff/counter-app/src/components/counter.jsx"],"sourcesContent":["import React, { Component } from 'react';\n\nclass Counter extends Component {\n    state = {\n        value: this.props.value\n        //tags: []\n        //imageUrl: 'https://picsum.photos/200'\n    };\n\n    //styles = {\n    //    fontSize: 10,\n    //    fontWeight: \"bold\"\n    //};\n\n    //renderTags() {\n    //    if (this.state.tags.length === 0) return <p>There are no tags!</p>;\n\n    //    return <ul>{this.state.tags.map(tag => <li key={tag}>{tag}</li>)}</ul>;\n    //}\n\n    //render() {\n    //    return (\n    //        <div>\n    //            { this.state.tags.length === 0 && \"Please create a new tag!\"}\n    //            {this.renderTags()}\n    //        </div>\n    //    );\n    //}\n\n    //constructor() {\n    //    super();\n    //    this.handleIncrement = this.handleIncrement.bind(this); //returns a new instance of this function\n    //}\n    \n    //arrow function acts the same way as a constructor so you have access to the child component/states\n    handleIncrement = () => {\n        this.setState({ value: this.state.value + 1 }) //setState tells the DOM something is going to change like TF\n        console.log(\"Increment Clicked\", this);\n    };\n\n    render() { \n        return ( \n            <React.Fragment>\n                <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n                <button \n                    onClick={this.handleIncrement} \n                    className='btn btn-secondary btn-sm'\n                        >Increment\n                </button>\n                <ul>\n                    { this.state.tags.map(tag => <li key={tag}>{ tag }</li>) }\n                </ul>\n            </React.Fragment>\n        );    \n    }\n\n    getBadgeClasses() {\n        let classes = \"badge m-2 badge-\";\n        classes += this.state.count === 0 ? \"warning\" : \"primary\";\n        return classes;\n    }\n\n    formatCount() {\n        const { count } = this.state;\n        return count === 0 ? \"Zero\" : count;\n    }\n}\n \nexport default Counter;"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;EAAA;IAAA;IAAA,KAC5BE,KAD4B,GACpB;MACJC,KAAK,EAAE,KAAKC,KAAL,CAAWD,KADd,CAEJ;MACA;;IAHI,CADoB;;IAAA,KAiC5BE,eAjC4B,GAiCV,MAAM;MACpB,KAAKC,QAAL,CAAc;QAAEH,KAAK,EAAE,KAAKD,KAAL,CAAWC,KAAX,GAAmB;MAA5B,CAAd,EADoB,CAC2B;;MAC/CI,OAAO,CAACC,GAAR,CAAY,mBAAZ,EAAiC,IAAjC;IACH,CApC2B;EAAA;;EAsC5BC,MAAM,GAAG;IACL,oBACI,QAAC,KAAD,CAAO,QAAP;MAAA,wBACI;QAAM,SAAS,EAAE,KAAKC,eAAL,EAAjB;QAAA,UAA0C,KAAKC,WAAL;MAA1C;QAAA;QAAA;QAAA;MAAA,QADJ,eAEI;QACI,OAAO,EAAE,KAAKN,eADlB;QAEI,SAAS,EAAC,0BAFd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAFJ,eAOI;QAAA,UACM,KAAKH,KAAL,CAAWU,IAAX,CAAgBC,GAAhB,CAAoBC,GAAG,iBAAI;UAAA,UAAgBA;QAAhB,GAASA,GAAT;UAAA;UAAA;UAAA;QAAA,QAA3B;MADN;QAAA;QAAA;QAAA;MAAA,QAPJ;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAaH;;EAEDJ,eAAe,GAAG;IACd,IAAIK,OAAO,GAAG,kBAAd;IACAA,OAAO,IAAI,KAAKb,KAAL,CAAWc,KAAX,KAAqB,CAArB,GAAyB,SAAzB,GAAqC,SAAhD;IACA,OAAOD,OAAP;EACH;;EAEDJ,WAAW,GAAG;IACV,MAAM;MAAEK;IAAF,IAAY,KAAKd,KAAvB;IACA,OAAOc,KAAK,KAAK,CAAV,GAAc,MAAd,GAAuBA,KAA9B;EACH;;AA/D2B;;AAkEhC,eAAef,OAAf"},"metadata":{},"sourceType":"module"}